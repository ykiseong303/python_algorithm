'''
분류 : 다이나믹 프로그래밍
문제 : 연속합 (백준 1912)
작성일자 : 2021.07.05
'''

# 목적 : 연속된 몇개의 수를 선택해서 구할 수 있는 합 중 가장 큰 합을 출력
# 접근 : dp
#       1. 점화식 ai = max(a[i], a[i]+d[i-1])
#           > 양수의 경우라면 무조건 많을수록 좋지만, 음수가 포함될 수 있으므로
#           > 현재의 값과 바로 직전의 dp값과의 합으로 비교 
#           > 합한 값이 현재보다 작다면, 자기 자신을 선택함으로써 이전의 값은 버림
#           > 연속되지 않는 것으로 간주
#       2. 1개만 입력될때는 따로 처리해야함에 유의

N = int(input())
lst = list(map(int, input().split()))
d = [x for x in lst] 
if N == 1 : 
    print(*d)
else : 
    for i in range(1,N) : 
        d[i] = max(lst[i], lst[i]+d[i-1])
    print(max(d))