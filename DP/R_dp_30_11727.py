'''
분류 : 다이나믹 프로그래밍
문제 : 2xN 타일링 2 (백준 11727)
작성일자 : 2021.07.11
'''

# 목적 : 2xN 타일을 채울 수 있는 모든 경우의 수 출력
# 접근 : dp 
#       1. 각 경우의 수를 채울 수 있는 방법을 생각
#        > N=2일때 : 3가지 
#        > N=3일때 : 1, 2 인경우와 2, 1 인경우를 고려
#           > N-1까지의 경우의 수는 1자모양 1개만 가능
#           > N-2까지의 경우의 수는 =,ㅁ 두가지만 가능 (||는 N-1에포함)
#           > 따라서 점화식 d[i] = d[i-1] + d[i-2] * 2

N = int(input())
d = [0] * 1000
d[0] = 1
d[1] = 3
for i in range(2, 1000) : 
    d[i] = d[i-1] + d[i-2] * 2
print(d[N-1]%10007)